package com.luv2code.springboot.cruddemo.service;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;

import com.luv2code.springboot.cruddemo.dao.EmployeeDAO;
import com.luv2code.springboot.cruddemo.dao.EmployeeRepository;
import com.luv2code.springboot.cruddemo.entity.Employee;

@Service
public class EmployeeServiceImpl implements EmployeeService {

	
	private EmployeeRepository employeeRepository;
	
	/*
	 *
	 * @Qualifier("employeeDAOJpaImpl")
	 * 
	 * con esa anotacion spring sabe a cual de las dos implementaciones
	 * de la interfaz apuntar, en este caso al de la nueva que se creo
	 * JPA Implementation o employeeDAOJpaImpl
	 * 
	 */
	
	@Autowired	
	public EmployeeServiceImpl(@Qualifier("employeeDAOJpaImpl") EmployeeRepository theEmployeeRepository) {
		employeeRepository = theEmployeeRepository;
	}
	
	@Override
	//@Transactional // no need JpaRepository provides
	public List<Employee> findAll() {
		return employeeRepository.findAll();
	}

	@Override
	@Transactional
	public Employee findById(int theId) {
		return employeeRepository.findById(theId);
	}

	@Override
	@Transactional
	public void save(Employee theEmployee) {
		employeeRepository.save(theEmployee);

	}

	@Override
	@Transactional
	public void deleteById(int theId) {
		employeeRepository.deleteById(theId);

	}

}
